[2019-04-20 16:46:56,258] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2019-04-20 16:46:56,259] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-04-20 16:46:56,260] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-04-20 16:46:56,260] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-04-20 16:46:56,260] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2019-04-20 16:46:56,260] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2019-04-20 16:46:56,260] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2019-04-20 16:46:56,261] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2019-04-20 16:46:56,264] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2019-04-20 16:46:56,264] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2019-04-20 16:46:56,264] INFO [Controller id=0] Initialized controller epoch to 10 and zk version 9 (kafka.controller.KafkaController)
[2019-04-20 16:46:56,264] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2019-04-20 16:46:56,265] INFO [Controller id=0] Epoch incremented to 11 (kafka.controller.KafkaController)
[2019-04-20 16:46:56,265] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-04-20 16:46:56,265] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-04-20 16:46:56,266] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-04-20 16:46:56,266] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-04-20 16:46:56,268] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-04-20 16:46:56,269] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-04-20 16:46:56,272] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-04-20 16:46:56,272] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-04-20 16:46:56,272] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-04-20 16:46:56,272] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-04-20 16:46:56,272] INFO [Controller id=0] Current list of topics in the cluster: Set(response_topic, auth, profile) (kafka.controller.KafkaController)
[2019-04-20 16:46:56,272] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-04-20 16:46:56,273] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-04-20 16:46:56,273] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-04-20 16:46:56,273] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-04-20 16:46:56,273] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-04-20 16:46:56,274] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-04-20 16:46:56,274] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-04-20 16:46:56,275] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=auth,Partition=0,Replica=0] -> OnlineReplica, [Topic=profile,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2019-04-20 16:46:56,275] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-04-20 16:46:56,275] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-04-20 16:46:56,275] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(auth-0 -> OnlinePartition, profile-0 -> OnlinePartition, response_topic-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2019-04-20 16:46:56,275] INFO [Controller id=0] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2019-04-20 16:46:56,276] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-04-20 16:46:56,276] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-04-20 16:46:56,276] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-04-20 16:46:56,276] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-04-20 16:46:56,276] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-04-20 16:46:56,277] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-04-20 16:47:01,028] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-20 16:47:01,028] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(auth-0 -> Vector(0), profile-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-20 16:47:01,028] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-20 16:47:01,028] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-20 16:47:26,275] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 192.168.1.166:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.net.SocketTimeoutException: Failed to connect within 30000 ms
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:272)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-04-20 16:47:26,382] INFO [RequestSendThread controllerId=0] Controller 0 connected to 192.168.1.166:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-04-20 16:52:01,029] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-20 16:52:01,030] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(auth-0 -> Vector(0), profile-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-20 16:52:01,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-20 16:52:01,030] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-20 16:57:01,036] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-20 16:57:01,036] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(auth-0 -> Vector(0), profile-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-20 16:57:01,036] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-20 16:57:01,036] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
